// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/deviceregistry/deviceregistry.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	interfaces "github.com/yndd/ztp-webserver/pkg/webserver/interfaces"
)

// MockRegistryDevice is a mock of RegistryDevice interface.
type MockRegistryDevice struct {
	ctrl     *gomock.Controller
	recorder *MockRegistryDeviceMockRecorder
}

// MockRegistryDeviceMockRecorder is the mock recorder for MockRegistryDevice.
type MockRegistryDeviceMockRecorder struct {
	mock *MockRegistryDevice
}

// NewMockRegistryDevice creates a new mock instance.
func NewMockRegistryDevice(ctrl *gomock.Controller) *MockRegistryDevice {
	mock := &MockRegistryDevice{ctrl: ctrl}
	mock.recorder = &MockRegistryDeviceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegistryDevice) EXPECT() *MockRegistryDeviceMockRecorder {
	return m.recorder
}

// SetWebserverSetupper mocks base method.
func (m *MockRegistryDevice) SetWebserverSetupper(arg0 interfaces.WebserverSetupper) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetWebserverSetupper", arg0)
}

// SetWebserverSetupper indicates an expected call of SetWebserverSetupper.
func (mr *MockRegistryDeviceMockRecorder) SetWebserverSetupper(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWebserverSetupper", reflect.TypeOf((*MockRegistryDevice)(nil).SetWebserverSetupper), arg0)
}
