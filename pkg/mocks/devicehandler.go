// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/devices/devicehandler.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeviceHandler is a mock of DeviceHandler interface.
type MockDeviceHandler struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceHandlerMockRecorder
}

// MockDeviceHandlerMockRecorder is the mock recorder for MockDeviceHandler.
type MockDeviceHandlerMockRecorder struct {
	mock *MockDeviceHandler
}

// NewMockDeviceHandler creates a new mock instance.
func NewMockDeviceHandler(ctrl *gomock.Controller) *MockDeviceHandler {
	mock := &MockDeviceHandler{ctrl: ctrl}
	mock.recorder = &MockDeviceHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeviceHandler) EXPECT() *MockDeviceHandlerMockRecorder {
	return m.recorder
}

// SetBackend mocks base method.
func (m *MockDeviceHandler) SetBackend() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetBackend")
}

// SetBackend indicates an expected call of SetBackend.
func (mr *MockDeviceHandlerMockRecorder) SetBackend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBackend", reflect.TypeOf((*MockDeviceHandler)(nil).SetBackend))
}
