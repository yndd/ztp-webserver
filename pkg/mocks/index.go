// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/storage/interfaces/index.go

// Package mocks is a generated GoMock package.
package mocks

import (
	fs "io/fs"
	url "net/url"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	structs "github.com/yndd/ztp-webserver/pkg/structs"
)

// MockIndex is a mock of Index interface.
type MockIndex struct {
	ctrl     *gomock.Controller
	recorder *MockIndexMockRecorder
}

// MockIndexMockRecorder is the mock recorder for MockIndex.
type MockIndexMockRecorder struct {
	mock *MockIndex
}

// NewMockIndex creates a new mock instance.
func NewMockIndex(ctrl *gomock.Controller) *MockIndex {
	mock := &MockIndex{ctrl: ctrl}
	mock.recorder = &MockIndexMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndex) EXPECT() *MockIndexMockRecorder {
	return m.recorder
}

// DeduceRelativeFilePath mocks base method.
func (m *MockIndex) DeduceRelativeFilePath(arg0 *url.URL) (*structs.FileEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeduceRelativeFilePath", arg0)
	ret0, _ := ret[0].(*structs.FileEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeduceRelativeFilePath indicates an expected call of DeduceRelativeFilePath.
func (mr *MockIndexMockRecorder) DeduceRelativeFilePath(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeduceRelativeFilePath", reflect.TypeOf((*MockIndex)(nil).DeduceRelativeFilePath), arg0)
}

// LoadBackend mocks base method.
func (m *MockIndex) LoadBackend(arg0 fs.FS) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadBackend", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadBackend indicates an expected call of LoadBackend.
func (mr *MockIndexMockRecorder) LoadBackend(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadBackend", reflect.TypeOf((*MockIndex)(nil).LoadBackend), arg0)
}
